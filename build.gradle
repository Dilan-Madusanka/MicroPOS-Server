// Build Dependencies
buildscript {

    ext {
        springBootVersion = '1.2.4.RELEASE'
    }

    repositories {
        mavenCentral()
        maven { url "http://repo.spring.io/milestone" }
    }

    dependencies {
        classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
    }

}

// Task Plugins
apply plugin: 'java'
apply plugin: 'idea'
apply plugin: 'spring-boot'

// Project Packaging
jar {
    baseName = 'micropos-server'
    version = '1.0'
}

// Project Repositories
repositories {
    mavenCentral()
    maven { url "http://repo.spring.io/milestone" }
}

// Project Dependencies
dependencies {
    compile files('libs/rxtx-2.2/RXTXcomm.jar')
    compile files('libs/EscPos-0.1.jar')
    compile 'org.springframework.boot:spring-boot-starter-web'
    compile 'org.springframework.boot:spring-boot-starter-data-jpa'
    compile 'org.springframework.boot:spring-boot-starter-data-rest'

    compile 'commons-io:commons-io:2.4'
    compile 'commons-codec:commons-codec:1.10'

    compile 'com.google.code.gson:gson:2.3.1'
    compile 'org.projectlombok:lombok:1.16.4'
    compile 'mysql:mysql-connector-java:5.1.38'
    //compile 'org.postgresql:postgresql:9.4.1207.jre7'
    //compile 'com.h2database:h2:1.4.187'

}

// Gradle Wrapper
task wrapper(type: Wrapper) {
    gradleVersion = '2.3'
}

// Deployment Task
task fullDeployFiles(dependsOn: ['assemble', ':client:fatJar']) << {
    copy {
        from 'server-start.bat'
        from 'server-restore.bat'
        from 'server-backup.bat'
        into 'deploy'

    }
    copy {
        from 'build/libs/micropos-server-1.0.jar'
        from 'rxtxSerial.dll'
        from 'printer.properties'
        from 'mysql.exe'
        from 'mysqldump.exe'
        into 'deploy/micropos'
    }
    copy {
        from 'backup'
        into 'deploy/micropos/backup'
    }
    copy {
        from 'timecard'
        into 'deploy/micropos/timecard'
    }
    copy {
        from project(':client').file('build/libs/micropos-client-1.0.jar')
        from 'public'
        into 'deploy/micropos/public'
    }
}

task fullDeployZip(type: Zip, dependsOn: 'fullDeployFiles') {
    from 'deploy'
    baseName = 'MicroPOS-Deployable'
}